(self.webpackChunkkubevela_io=self.webpackChunkkubevela_io||[]).push([[12927],{3905:function(t,e,a){"use strict";a.d(e,{Zo:function(){return o},kt:function(){return s}});var n=a(67294);function l(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function r(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?r(Object(a),!0).forEach((function(e){l(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function d(t,e){if(null==t)return{};var a,n,l=function(t,e){if(null==t)return{};var a,n,l={},r=Object.keys(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||(l[a]=t[a]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(n=0;n<r.length;n++)a=r[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(l[a]=t[a])}return l}var u=n.createContext({}),p=function(t){var e=n.useContext(u),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},o=function(t){var e=p(t.components);return n.createElement(u.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},g=n.forwardRef((function(t,e){var a=t.components,l=t.mdxType,r=t.originalType,u=t.parentName,o=d(t,["components","mdxType","originalType","parentName"]),g=p(a),s=l,k=g["".concat(u,".").concat(s)]||g[s]||m[s]||r;return a?n.createElement(k,i(i({ref:e},o),{},{components:a})):n.createElement(k,i({ref:e},o))}));function s(t,e){var a=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=a.length,i=new Array(r);i[0]=g;var d={};for(var u in e)hasOwnProperty.call(e,u)&&(d[u]=e[u]);d.originalType=t,d.mdxType="string"==typeof t?t:l,i[1]=d;for(var p=2;p<r;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},65064:function(t,e,a){"use strict";a.r(e),a.d(e,{frontMatter:function(){return i},metadata:function(){return d},toc:function(){return u},default:function(){return o}});var n=a(22122),l=a(19756),r=(a(67294),a(3905)),i={title:"\u963f\u91cc\u4e91 VPN-GATEWAY"},d={unversionedId:"end-user/components/cloud-services/terraform/alibaba-vpn-gateway",id:"end-user/components/cloud-services/terraform/alibaba-vpn-gateway",isDocsHomePage:!1,title:"\u963f\u91cc\u4e91 VPN-GATEWAY",description:"\u63cf\u8ff0",source:"@site/i18n/zh/docusaurus-plugin-content-docs/current/end-user/components/cloud-services/terraform/alibaba-vpn-gateway.md",sourceDirName:"end-user/components/cloud-services/terraform",slug:"/end-user/components/cloud-services/terraform/alibaba-vpn-gateway",permalink:"/zh/docs/next/end-user/components/cloud-services/terraform/alibaba-vpn-gateway",editUrl:"https://github.com/oam-dev/kubevela.io/edit/main/docs/end-user/components/cloud-services/terraform/alibaba-vpn-gateway.md",version:"current",lastUpdatedBy:"Zheng Xi Zhou",lastUpdatedAt:1647926188,formattedLastUpdatedAt:"2022/3/22",frontMatter:{title:"\u963f\u91cc\u4e91 VPN-GATEWAY"}},u=[{value:"\u63cf\u8ff0",id:"\u63cf\u8ff0",children:[]},{value:"\u53c2\u6570\u8bf4\u660e",id:"\u53c2\u6570\u8bf4\u660e",children:[{value:"\u5c5e\u6027",id:"\u5c5e\u6027",children:[]}]}],p={toc:u};function o(t){var e=t.components,a=(0,l.Z)(t,["components"]);return(0,r.kt)("wrapper",(0,n.Z)({},p,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u63cf\u8ff0"},"\u63cf\u8ff0"),(0,r.kt)("p",null,"Create VPN resources on AliCloud based on Terraform module"),(0,r.kt)("h2",{id:"\u53c2\u6570\u8bf4\u660e"},"\u53c2\u6570\u8bf4\u660e"),(0,r.kt)("h3",{id:"\u5c5e\u6027"},"\u5c5e\u6027"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u662f\u5426\u5fc5\u987b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_vpn_server_name"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the SSL-VPN server."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_protocol"),(0,r.kt)("td",{parentName:"tr",align:null},"The protocol used by the SSL-VPN server. Valid value: UDP(default)"),(0,r.kt)("td",{parentName:"tr",align:null},"TCP."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_connection_name"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the IPsec connection."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_remote_subnet"),(0,r.kt)("td",{parentName:"tr",align:null},"The CIDR block of the local data center. This parameter is used for phase-two negotiation."),(0,r.kt)("td",{parentName:"tr",align:null},"list(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_local_id"),(0,r.kt)("td",{parentName:"tr",align:null},"The identification of the VPN gateway."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_enc_alg"),(0,r.kt)("td",{parentName:"tr",align:null},"The encryption algorithm of phase-two negotiation. Valid value: aes"),(0,r.kt)("td",{parentName:"tr",align:null},"aes192"),(0,r.kt)("td",{parentName:"tr",align:null},"aes256"),(0,r.kt)("td",{parentName:"tr",align:null},"des")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"region"),(0,r.kt)("td",{parentName:"tr",align:null},"(Deprecated from version 1.2.0) The region used to launch this module resources."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_ssl_connections"),(0,r.kt)("td",{parentName:"tr",align:null},"The max connections of SSL VPN. Default to 5. This field is ignored when enable_ssl is false."),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_compress"),(0,r.kt)("td",{parentName:"tr",align:null},"Specify whether to compress the communication. Valid value: true (default)"),(0,r.kt)("td",{parentName:"tr",align:null},"false."),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_auth_alg"),(0,r.kt)("td",{parentName:"tr",align:null},"The authentication algorithm of phase-two negotiation. Valid value: md5"),(0,r.kt)("td",{parentName:"tr",align:null},"sha1. Default value: sha1."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_lifetime"),(0,r.kt)("td",{parentName:"tr",align:null},"The SA lifecycle as the result of phase-two negotiation. The valid value is ","[0, 86400]",", the unit is second and the default value is 86400."),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_pfs"),(0,r.kt)("td",{parentName:"tr",align:null},"The Diffie-Hellman key exchange algorithm used by phase-two negotiation. Valid value: group1"),(0,r.kt)("td",{parentName:"tr",align:null},"group2"),(0,r.kt)("td",{parentName:"tr",align:null},"group5"),(0,r.kt)("td",{parentName:"tr",align:null},"group14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpc_id"),(0,r.kt)("td",{parentName:"tr",align:null},"The VPN belongs the vpc_id, the field can't be changed."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_enable_ipsec"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable or Disable IPSec VPN. At least one type of VPN should be enabled."),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_period"),(0,r.kt)("td",{parentName:"tr",align:null},"The filed is only required while the InstanceChargeType is prepaid."),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_client_ip_pool"),(0,r.kt)("td",{parentName:"tr",align:null},"The CIDR block from which access addresses are allocated to the virtual network interface card of the client."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_cipher"),(0,r.kt)("td",{parentName:"tr",align:null},"The encryption algorithm used by the SSL-VPN server. Valid value: AES-128-CBC (default)"),(0,r.kt)("td",{parentName:"tr",align:null},"AES-192-CBC"),(0,r.kt)("td",{parentName:"tr",align:null},"AES-256-CBC"),(0,r.kt)("td",{parentName:"tr",align:null},"none.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_port"),(0,r.kt)("td",{parentName:"tr",align:null},"The port used by the SSL-VPN server. The default value is 1194.The following ports cannot be used: ","[22, 2222, 22222, 9000, 9001, 9002, 7505, 80, 443, 53, 68, 123, 4510, 4560, 500, 4500]","."),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_charge_type"),(0,r.kt)("td",{parentName:"tr",align:null},"The charge type for instance. Valid value: PostPaid, PrePaid. Default to PostPaid."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_description"),(0,r.kt)("td",{parentName:"tr",align:null},"The description of the VPN instance."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_local_subnet"),(0,r.kt)("td",{parentName:"tr",align:null},"The CIDR block of the VPC to be connected with the local data center. This parameter is used for phase-two negotiation."),(0,r.kt)("td",{parentName:"tr",align:null},"list(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_auth_alg"),(0,r.kt)("td",{parentName:"tr",align:null},"The authentication algorithm of phase-one negotiation. Valid value: md5"),(0,r.kt)("td",{parentName:"tr",align:null},"sha1. Default value: sha1."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_remote_id"),(0,r.kt)("td",{parentName:"tr",align:null},"The identification of the customer gateway."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_name"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the VPN gateway."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_enable_ssl"),(0,r.kt)("td",{parentName:"tr",align:null},"Enable or Disable SSL VPN.  At least one type of VPN should be enabled."),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_client_cert_names"),(0,r.kt)("td",{parentName:"tr",align:null},"The names of the client certificates."),(0,r.kt)("td",{parentName:"tr",align:null},"list(string)"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ipsec_effect_immediately"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to delete a successfully negotiated IPsec tunnel and initiate a negotiation again. Valid value:true,false."),(0,r.kt)("td",{parentName:"tr",align:null},"bool"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_version"),(0,r.kt)("td",{parentName:"tr",align:null},"The version of the IKE protocol. Valid value: ikev1"),(0,r.kt)("td",{parentName:"tr",align:null},"ikev2. Default value: ikev1."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_pfs"),(0,r.kt)("td",{parentName:"tr",align:null},"The Diffie-Hellman key exchange algorithm used by phase-one negotiation. Valid value: group1"),(0,r.kt)("td",{parentName:"tr",align:null},"group2"),(0,r.kt)("td",{parentName:"tr",align:null},"group5"),(0,r.kt)("td",{parentName:"tr",align:null},"group14")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cgw_id"),(0,r.kt)("td",{parentName:"tr",align:null},"The customer gateway id used to connect with vpn gateway."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cgw_name"),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the VPN customer gateway. Defaults to null."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cgw_description"),(0,r.kt)("td",{parentName:"tr",align:null},"The description of the VPN customer gateway instance."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ssl_local_subnet"),(0,r.kt)("td",{parentName:"tr",align:null},"The CIDR block to be accessed by the client through the SSL-VPN connection."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_enc_alg"),(0,r.kt)("td",{parentName:"tr",align:null},"The encryption algorithm of phase-one negotiation. Valid value: aes"),(0,r.kt)("td",{parentName:"tr",align:null},"aes192"),(0,r.kt)("td",{parentName:"tr",align:null},"aes256"),(0,r.kt)("td",{parentName:"tr",align:null},"des")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_mode"),(0,r.kt)("td",{parentName:"tr",align:null},"The negotiation mode of IKE V1. Valid value: main (main mode)"),(0,r.kt)("td",{parentName:"tr",align:null},"aggressive (aggressive mode). Default value: main."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"vpn_bandwidth"),(0,r.kt)("td",{parentName:"tr",align:null},"The value should be 10, 100, 200, 500, 1000 if the user is postpaid, otherwise it can be 5, 10, 20, 50, 100, 200, 500, 1000."),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"cgw_ip_address"),(0,r.kt)("td",{parentName:"tr",align:null},"The IP address of the customer gateway."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"ike_lifetime"),(0,r.kt)("td",{parentName:"tr",align:null},"The SA lifecycle as the result of phase-one negotiation. The valid value of n is ","[0, 86400]",", the unit is second and the default value is 86400."),(0,r.kt)("td",{parentName:"tr",align:null},"number"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"psk"),(0,r.kt)("td",{parentName:"tr",align:null},"Used for authentication between the IPsec VPN gateway and the customer gateway."),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"writeConnectionSecretToRef"),(0,r.kt)("td",{parentName:"tr",align:null},"The secret which the cloud resource connection will be written to"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#writeConnectionSecretToRef"},"writeConnectionSecretToRef")),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h4",{id:"writeconnectionsecrettoref"},"writeConnectionSecretToRef"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u63cf\u8ff0"),(0,r.kt)("th",{parentName:"tr",align:null},"\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u662f\u5426\u5fc5\u987b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u9ed8\u8ba4\u503c"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"The secret name which the cloud resource connection will be written to"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"true"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"namespace"),(0,r.kt)("td",{parentName:"tr",align:null},"The secret namespace which the cloud resource connection will be written to"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null})))))}o.isMDXComponent=!0}}]);